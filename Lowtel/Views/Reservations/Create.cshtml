@model Lowtel.Models.Reservation
@{
    ViewData["Title"] = "Create Reservation";
}
<h2>@ViewData["Title"]</h2>
<h4>Reservation</h4>
<hr />
<div class="ErrMsg">
    @TempData["ErrMessageReservation"]
</div>
<br />
<sector class="signature-sector">
    <div>Client signature:</div>
    <canvas id="signCanvas" width="350" height="200" class="sign-canvas"></canvas>
</sector>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ClientId" class="control-label"></label>
                <select asp-for="ClientId" id="client-id" class="form-control" asp-items="ViewBag.ClientId"></select>
            </div>
            <div class="form-group">
                <label asp-for="Hotel" class="control-label"></label>
                <select id="hotel-id" class="form-control" asp-for="HotelId" asp-items="ViewBag.HotelId" onchange="reservationParm.hotelId = this.value; GenerateFreeRoom()"></select>
            </div>
            <div class="form-group">
                <label>Room Type: </label>
                <select id="roomType" asp-items="ViewBag.RoomTypeId" class="form-control" onchange="reservationParm.roomTypeId = this.value; GenerateFreeRoom()"></select>
            </div>
            <div class="form-group">
                <label asp-for="RoomId" class="control-label"></label>
                <select id="room-id" asp-for="RoomId" class="form-control"></select>
            </div>
            <div class="form-group">
                <label asp-for="CheckInDate" class="control-label"></label>
                <input asp-for="CheckInDate" id="checkin-date" class="form-control" />
                <span asp-validation-for="CheckInDate" class="text-danger"></span>
            </div>
            @*<div class="form-group">
                <label asp-for="CheckOutDate" class="control-label"></label>
                <input asp-for="CheckOutDate" id="checkout-date" class="form-control" />
                <span asp-validation-for="CheckOutDate" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>
<script>
    // init
    var reservationParm = {
        "hotelId": "1",
        "roomTypeId": "1"
    };
    GenerateFreeRoom();
    function GenerateFreeRoom() {
        $("#room-id").html("");
        $.ajax({
            type: "GET",
            url: "/Rooms/GetFreeRoomByParms",
            data: {
                hotelId: reservationParm.hotelId,
                roomTypeId: reservationParm.roomTypeId
            },
            success: function (res) {
                for (var i in res) {
                    $("#room-id").append("<option>" + res[i].id + "</option>");
                }
            },
            error: function (err) {
                console.error(err);
            }
        });
    }

    // ------------ This code is for canvas draw with mouse ------------ //

    var mousePressed = false;
    var lastX, lastY;
    var ctx;

    ctx = document.getElementById('signCanvas').getContext("2d");

    $('#signCanvas').mousedown(function (e) {
        mousePressed = true;
        Draw(e.pageX - $(this).offset().left, e.pageY - $(this).offset().top, false);
    });

    $('#signCanvas').mousemove(function (e) {
        if (mousePressed) {
            Draw(e.pageX - $(this).offset().left, e.pageY - $(this).offset().top, true);
        }
    });

    $('#signCanvas').mouseup(function (e) {
        mousePressed = false;
    });
    $('#signCanvas').mouseleave(function (e) {
        mousePressed = false;
    });

    function Draw(x, y, isDown) {
        if (isDown) {
            ctx.beginPath();
            ctx.strokeStyle = $('#selColor').val();
            ctx.lineWidth = $('#selWidth').val();
            ctx.lineJoin = "round";
            ctx.moveTo(lastX, lastY);
            ctx.lineTo(x, y);
            ctx.closePath();
            ctx.stroke();
        }
        lastX = x; lastY = y;
    }

    // ------------ This code is for canvas draw with mouse ------------ //
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
